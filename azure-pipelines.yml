name: 1.0.1
trigger:
  paths:
    exclude:
      - .github
      - .vscode/*
resources:
  repositories:
    - repository: YAML-Templates
      type: github
      endpoint: variableresistor
      name: variableresistor/YAML-Templates
pool:
  name: Default
variables:
  ModuleName: NexusIQ

steps:
  - checkout: self
    path: ${{variables.ModuleName}}

  - pwsh: |
      Import-Module ./$env:ModuleName
      $Splat = @{
        BaseUrl = $env:BaseUrl
        APIVersion = "v2"
        Credential = [pscredential]::new($env:UserCode,$($env:PassCode | ConvertTo-SecureString -AsPlainText -Force))
      }
      Connect-NexusIQ @Splat
    displayName: 'Set up Nexus IQ connection profile'
    enabled: false
    env:
      BaseUrl: https://nexusiq.myorg.com
      ModuleName: ${{variables.ModuleName}}
      PassCode: TestPassCode
      UserCode: TestUserCode

  - pwsh: |
      $RootModulePath = "./$env:ModuleName.psm1"

      "Put all the module files' content into a single file"
      Set-Content -Path $RootModulePath -Value ""
      $ModuleFiles = Get-ChildItem -File -Path $PSScriptRoot -Filter "*.psm1" | Where-Object -Property Name -ne ([System.IO.Path]::GetFileName($RootModulePath))
      ($ModuleFiles | Get-Content) -replace "using\smodule\s\.\\Base\.psm1","" | Add-Content -Path $RootModulePath

      "Modify the module manifest to include only a single module file."
      $ManifestFile = "./$env:ModuleName.psd1"
      (Get-Content $ManifestFile) -replace "NestedModules\s\=\s@\(.*\)","NestedModules = @()" |
      Set-Content -Path $ManifestFile
      $ModuleFiles | Remove-Item -Verbose
      Get-ChildItem -Directory | Remove-Item -Recurse -Verbose
      $FilesToDelete = "azure-pipelines.yml"
      Get-ChildItem -File -Recurse | Where -Property Name -in $FilesToDelete | Remove-Item -Verbose
    displayName: 'Consolidate the module files'
    workingDirectory: $(Pipeline.Workspace)/${{variables.ModuleName}}
    env:
      ModuleName: ${{variables.ModuleName}}

  - template: powershell/publish-module.yml@YAML-Templates
    parameters:
      ModuleName: ${{variables.ModuleName}}

  - pwsh: |
      $Separator = [System.IO.Path]::DirectorySeparatorChar
      "$env:APPDATA$Separator$env:ModuleName" | Remove-Item -Recurse -Verbose
      git reset --hard && git clean -ffdx
    displayName: 'Remove the credentials and reset the workspace'
    enabled: false
    condition: always()
    workingDirectory: $(Pipeline.Workspace)/${{variables.ModuleName}}
    env:
      ModuleName: ${{variables.ModuleName}}
