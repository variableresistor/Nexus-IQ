name: 1.0.0
trigger:
  paths:
    exclude:
      - .github
      - .vscode/*
pool:
  vmImage: 'windows-latest'
variables:
  ModuleName: NexusIQ

steps:
  - checkout: self
    path: ${{variables.ModuleName}}

  - template: Build/register-psgallery.yml

  - pwsh: |
      $Separator = [System.IO.Path]::DirectorySeparatorChar
      $SaveDir = "$env:APPDATA$Separator$env:ModuleName"
      $AuthXmlPath = "$SaveDir$Separator`Auth.xml"
      [pscredential]@{
        BaseUrl = $env:BaseUrl
        APIVersion = "V2"
        Credential = [pscredential]::new($env:UserCode,$($env:PassCode | ConvertTo-SecureString -AsPlainText -Force))
      } | Export-CliXml -Path $AuthXmlPath
    displayName: Set up Nexus IQ connection profile
    env:
      UserCode: TestUserCode
      PassCode: TestPassCode
      ModuleName: ${{variables.ModuleName}}
      BaseUrl: https://nexusiq.myorg.com

  - template: Build/run-tests.yml
    parameters:
      ModuleName: ${{variables.ModuleName}}

  - pwsh: |
      $RootModulePath = "./NexusIQ.psm1"

      "Put all the module files' content into a single file"
      Set-Content -Path $RootModulePath -Value ""
      $ModuleFiles = Get-ChildItem -File -Path $PSScriptRoot -Filter "*.psm1" -Exclude ([System.IO.Path]::GetFileName($RootModulePath))
      ($ModuleFiles | Get-Content) -replace "using\smodule\s\.\\Base\.psm1","" | Add-Content -Path $RootModulePath

      "Modify the module manifest to include only a single module file."
      $ManifestFile = "./NexusIQ.psd1"
      (Get-Content $ManifestFile) -replace "NestedModules\s\=\s@\(.*\)","NestedModules = @()" |
      Set-Content -Path $ManifestFile
      $ModuleFiles | Remove-Item -Verbose
    workingDirectory: $(Pipeline.Workspace)/${{variables.ModuleName}}
    displayName: Consolidate the module files
